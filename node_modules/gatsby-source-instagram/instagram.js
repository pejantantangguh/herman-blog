"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.scrapingInstagramPosts = scrapingInstagramPosts;
exports.scrapingInstagramHashtags = scrapingInstagramHashtags;
exports.scrapingInstagramUser = scrapingInstagramUser;
exports.apiInstagramPosts = apiInstagramPosts;

function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }

function _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err); } _next(undefined); }); }; }

const axios = require(`axios`);

const cheerio = require(`cheerio`);

const parseResponse = response => {
  const $ = cheerio.load(response.data);
  const scripts = $(`html > body > script`); // Code smells #40 and #42
  // I should verify why i get the script before the body tag

  let id = 0;

  if (scripts.get(0).attribs.type === `application/ld+json`) {
    id = 1;
  }

  const jsonData = $(`html > body > script`).get(id).children[0].data.replace(/window\._sharedData\s?=\s?{/, `{`).replace(/;$/g, ``);
  return JSON.parse(jsonData).entry_data;
};

function scrapingInstagramPosts(_x) {
  return _scrapingInstagramPosts.apply(this, arguments);
}

function _scrapingInstagramPosts() {
  _scrapingInstagramPosts = _asyncToGenerator(function* ({
    username
  }) {
    return axios.get(`https://www.instagram.com/${username}/`).then(response => {
      const data = parseResponse(response);
      const photos = [];
      data.ProfilePage[0].graphql.user.edge_owner_to_timeline_media.edges.forEach(edge => {
        if (edge.node) {
          photos.push(edge.node);
        }
      });
      return photos;
    }).catch(err => {
      console.warn(`\nCould not fetch instagram posts. Error status ${err}`);
      return null;
    });
  });
  return _scrapingInstagramPosts.apply(this, arguments);
}

function scrapingInstagramHashtags(_x2) {
  return _scrapingInstagramHashtags.apply(this, arguments);
}

function _scrapingInstagramHashtags() {
  _scrapingInstagramHashtags = _asyncToGenerator(function* ({
    hashtag
  }) {
    return axios.get(`https://www.instagram.com/explore/tags/${hashtag}/`).then(response => {
      const data = parseResponse(response);
      const photos = [];
      data.TagPage[0].graphql.hashtag.edge_hashtag_to_media.edges.forEach(edge => {
        if (edge.node) {
          photos.push(edge.node);
        }
      });
      return photos;
    }).catch(err => {
      console.warn(`\nCould not fetch instagram posts from hashtag. Error status ${err}`);
      return null;
    });
  });
  return _scrapingInstagramHashtags.apply(this, arguments);
}

function scrapingInstagramUser(_x3) {
  return _scrapingInstagramUser.apply(this, arguments);
}

function _scrapingInstagramUser() {
  _scrapingInstagramUser = _asyncToGenerator(function* ({
    username
  }) {
    return axios.get(`https://www.instagram.com/${username}/`).then(response => {
      const data = parseResponse(response);
      const user = data.ProfilePage[0].graphql.user;
      const infos = {
        id: user.id,
        full_name: user.full_name,
        biography: user.biography,
        edge_followed_by: user.edge_followed_by,
        edge_follow: user.edge_follow,
        profile_pic_url: user.profile_pic_url,
        profile_pic_url_hd: user.profile_pic_url_hd,
        username: user.username
      };
      return infos;
    }).catch(err => {
      console.warn(`\nCould not fetch instagram user. Error status ${err}`);
      return null;
    });
  });
  return _scrapingInstagramUser.apply(this, arguments);
}

function apiInstagramPosts(_x4) {
  return _apiInstagramPosts.apply(this, arguments);
}

function _apiInstagramPosts() {
  _apiInstagramPosts = _asyncToGenerator(function* ({
    access_token,
    instagram_id,
    username
  }) {
    return axios.get(`https://graph.facebook.com/v3.1/${instagram_id}/media?fields=media_url,thumbnail_url,caption,media_type,like_count,shortcode,timestamp,comments_count,username&limit=100&access_token=${access_token}`).then(
    /*#__PURE__*/
    function () {
      var _ref = _asyncToGenerator(function* (response) {
        const results = [];
        results.push(...response.data.data);

        while (response.data.paging.next) {
          response = yield axios(response.data.paging.next);
          results.push(...response.data.data);
        }

        return results;
      });

      return function (_x5) {
        return _ref.apply(this, arguments);
      };
    }()).catch(
    /*#__PURE__*/
    function () {
      var _ref2 = _asyncToGenerator(function* (err) {
        console.warn(`\nCould not get instagram posts using the Graph API. Error status ${err}`);
        console.warn(`Falling back to public scraping... with ${username}`);

        if (username) {
          const photos = yield scrapingInstagramPosts({
            username
          });
          return photos;
        }

        return null;
      });

      return function (_x6) {
        return _ref2.apply(this, arguments);
      };
    }());
  });
  return _apiInstagramPosts.apply(this, arguments);
}